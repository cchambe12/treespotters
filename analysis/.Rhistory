phases<-c("Breaking leaf buds", "Leaves", "Flowers or flower buds")
dx<-filter(dx, pheno%in%phases)
dx<-filter(dx, year>=2016)
dx$species<-ifelse(dx$species=="Acesac", "Acer saccharum", dx$species)
dx$species<-ifelse(dx$species=="Aesfla", "Aesculus flava", dx$species)
dx$species<-ifelse(dx$species=="Betall", "Betula alleghaniensis", dx$species)
dx$species<-ifelse(dx$species=="Betnig", "Betula nigra", dx$species)
dx$species<-ifelse(dx$species=="Cargla", "Carya glabra", dx$species)
dx$species<-ifelse(dx$species=="Carova", "Carya ovata", dx$species)
dx$species<-ifelse(dx$species=="Faggra", "Fagus grandifolia", dx$species)
dx$species<-ifelse(dx$species=="Popdel", "Populus deltoides", dx$species)
dx$species<-ifelse(dx$species=="Quealb", "Quercus alba", dx$species)
dx$species<-ifelse(dx$species=="Querub", "Quercus rubra", dx$species)
dx$species<-ifelse(dx$species=="Tilame", "Tilia americana", dx$species)
dvr<-dx
dvr$pheno<-ifelse(dvr$pheno=="Breaking leaf buds", "bb", dvr$pheno)
dvr$pheno<-ifelse(dvr$pheno=="Leaves", "lo", dvr$pheno)
dvr$pheno<-ifelse(dvr$pheno=="Flowers or flower buds", "flo", dvr$pheno)
dvr<-spread(dvr, pheno, mean)
dvr$lo<-as.numeric(dvr$lo)
dvr$bb<-as.numeric(dvr$bb)
dvr$risk<-dvr$lo-dvr$bb
dvr$hys<-ifelse(dvr$lo<=dvr$flo, "pro", "hys")
#ggplot(dx, aes(x=species, y=mean)) + geom_point(aes(color=pheno)) + facet_wrap(~species)
#fit1<-stan_glm(risk~bb+as.factor(year), data=dvr)
#fit1
cols <- colorRampPalette(brewer.pal(3,"Set1"))(3)
#dvr<-dvr[!(dvr$species=="Fagus grandifolia" & dvr$year==2018)]
dvr$code<-reorder(dvr$species, dvr$risk)
quartz()
frost<- ggplot(dvr, aes(x=code, y=risk)) + geom_point(aes(color=as.factor(year))) + ylab("Frost Risk") +
xlab("Species") + geom_line(aes(x=code, y=risk, color=as.factor(year), group=as.factor(year))) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, hjust=1),
axis.text=element_text(size=10), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(), legend.position = c(0.15, 0.85)) + scale_color_manual(values=cols,
labels=c("2016","2017","2018"),
name="Year") + scale_y_continuous(limits=c(0, 30), expand=c(0,0))
frost
dx.r<-filter(dx, pheno!="Flowers or flower buds")
xx<-subset(dx.r, pheno=="Breaking leaf buds")
xx$bb.yr<-ave(xx$mean, xx$year)
xx<-dplyr::select(xx, bb.yr, year)
xx<-xx[!duplicated(xx),]
dx.r<-inner_join(dx.r, xx)
dx.r$code<-reorder(dx.r$species, dx.r$mean)
dvr2<-ggplot(dx.r, aes(x=code, y=mean)) + geom_point(aes(color=pheno)) +
geom_line() + coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed")
dvr2
dx.h<-filter(dx, pheno!="Breaking leaf buds")
hys<-dplyr::select(dvr, species, year, hys)
dx.h<-inner_join(dx.h, hys)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(color=pheno)) + geom_line(aes(x=species, y=mean, color=hys, group=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed")
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(color=pheno)) + geom_line(aes(x=species, y=mean, color=hys, group=year)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed")
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(color=pheno)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed")
colors<-colorRampPalette(brewer.pal(2,"Set1"))(2)
colors<-colorRampPalette(brewer.pal(2,"Set1"))(2)
colors<-colorRampPalette(brewer.pal(3,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point() + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c("hys","pro"),
name="")
colors<-colorRampPalette(brewer.pal(3,"Accent"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c("hys","pro"),
name="")
dx.h<-dx.h[!(dx.h$species=="Fagus grandifolia" & dx.h$year==2018),]
colors<-colorRampPalette(brewer.pal(8,"Accent"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c("hys","pro"),
name="")
colors<-colorRampPalette(brewer.pal(8,"Set2"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(3,"Set2"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(4,"Set2"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(4,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(3,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(5,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(8,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(6,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(7,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(3,"Set1"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
colors<-colorRampPalette(brewer.pal(8,"Spectral"))(2)
ggplot(dx.h, aes(x=species, y=mean)) + geom_point(aes(col=hys)) + geom_line(aes(col=hys)) +
coord_flip() + ylab("Day of Year") + xlab("Species") +theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.y = element_text(face = "italic"),
axis.text=element_text(size=9), legend.key = element_rect(fill = "transparent"),
legend.box.background = element_rect(),
panel.spacing = unit(2, "lines"),
strip.background = element_rect(fill="transparent"),
strip.text = element_text(size=14)) + labs(col="Phenophase") +
facet_wrap(~year) + geom_hline(aes(yintercept=bb.yr), xx, col="forestgreen", linetype="dashed") + scale_color_manual(values=colors,
labels=c(hys="Hysteranthy",
pro="Proteranthy"),
name="")
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year>2016)
dx<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dx<-dx[!duplicated(dx),]
length(unique(dx$ObservedBy_Person_ID))
View(dx)
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year>2017)
dx<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dx<-dx[!duplicated(dx),]
length(unique(dx$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2016)
dx<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dx<-dx[!duplicated(dx),]
length(unique(dx$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2017)
dx<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dx<-dx[!duplicated(dx),]
length(unique(dx$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year, First_Yes_Month)
df<-filter(df, First_Yes_Year==2017)
dx<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dx<-dx[!duplicated(dx),]
length(unique(dx$ObservedBy_Person_ID))
View(dx)
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2016)
dsix<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dsix<-dsix[!duplicated(dsix),]
length(unique(dsix$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2017)
dseven<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dseven<-dseven[!duplicated(dseven),]
length(unique(dseven$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2018)
deight<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
deight<-dsix[!duplicated(deight),]
length(unique(deight$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df<-filter(df, First_Yes_Year==2018)
deight<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
deight<-deight[!duplicated(deight),]
length(unique(deight$ObservedBy_Person_ID))
obs<-full_join(dsix, dseven)
obs<-full_join(obs, deight)
obs<-obs[!duplicated(obs),]
View(obs)
obs<-spread(obs, First_Yes_Year)
View(dvr)
obs<-spread(obs, First_Yes_Year, ObservedBy_Person_ID)
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df[] <- lapply(df, gsub, pattern="'", replacement="")
df<-filter(df, First_Yes_Year==2016)
dsix<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dsix<-dsix[!duplicated(dsix),]
length(unique(dsix$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df[] <- lapply(df, gsub, pattern="'", replacement="")
df<-filter(df, First_Yes_Year==2017)
dseven<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dseven<-dseven[!duplicated(dseven),]
length(unique(dseven$ObservedBy_Person_ID))
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df[] <- lapply(df, gsub, pattern="'", replacement="")
df<-filter(df, First_Yes_Year==2018)
deight<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
deight<-deight[!duplicated(deight),]
length(unique(deight$ObservedBy_Person_ID))
obs<-full_join(dsix, dseven)
obs<-full_join(obs, deight)
obs<-obs[!duplicated(obs),]
obs<-spread(obs, First_Yes_Year, ObservedBy_Person_ID)
obs<-spread(obs, ObservedBy_Person_ID, First_Yes_Year)
tt<-as.data.frame(table(obs$First_Yes_Year, obs$ObservedBy_Person_ID))
View(tt)
tt$years<-ave(
tt$ObservedBy_Person_ID, tt$First_Yes_Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
tt$years<-ave(
tt$First_Yes_Year,tt$ObservedBy_Person_ID,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
View(tt)
tt$years<-ave(
tt$Var2, tt$Freq,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
tt$years<-ave(
tt$Freq, tt$Var2,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
tt$years<-ave(
tt$Freq, tt$Var2,
FUN=function(x) cumsum(c(0, head(x, 0)))
)
tt$years<-ave(
tt$Freq, tt$Var2,
FUN=function(x) cumsum(c(0, head(x, 1)))
)
tt$years<-ave(
tt$Freq, tt$Var2,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
t18<-subset(tt, Var1==2018)
View(t18)
t18<-t18[!(Freq>0),]
t18<-t18[!(t18$Freq>0),]
t18<-subset(tt, Var1==2018)
t18<-t18[(t18$Freq>0),]
table(t18$years)
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year)
df[] <- lapply(df, gsub, pattern="'", replacement="")
dsix<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
dsix<-dsix[!duplicated(dsix),]
length(unique(dsix$ObservedBy_Person_ID))
23/58
20/58
15/58
rm(list=ls())
options(stringsAsFactors = FALSE)
## Load Libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(randomForest)
library(geosphere)
library(anytime)
library(weathermetrics)
library(measurements)
library(lubridate)
library(egg)
# Set Working Directory
setwd("~/Documents/git/treespotters/analysis")
## Get all that data!
## Start with phenology data and clean
bb<-read.csv("input/individual_phenometrics_data.csv", header=TRUE)
bb<-bb%>%
rename(lat=Latitude)%>%
rename(long=Longitude)%>%
rename(elev=Elevation_in_Meters)%>%
rename(year=First_Yes_Year)%>%
rename(month=First_Yes_Month)%>%
rename(day=First_Yes_Day)%>%
rename(doy=First_Yes_DOY)%>%
rename(numYs=NumYs_in_Series)%>%
rename(photo=Daylength)%>%
rename(phase=Phenophase_Description)%>%
rename(ID=Individual_ID)%>%
rename(aprecip=Accum_Prcp)
bb.pheno<-dplyr::select(bb, Genus, Species, Common_Name, phase, lat, long, elev, year, doy, numYs,aprecip , photo, ID)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Breaking leaf buds", "budburst", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Leaves", "leafout", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Flowers or flower buds", "flowers", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Falling leaves", "leaf drop", bb.pheno$phase)
### Now work on finding day of budburst, etc.
bb.pheno<-filter(bb.pheno, numYs>2)
stan.bb<-bb.pheno%>%
group_by(ID, phase, year) %>%
slice(which.min(doy))
stan.bb$m.doy<-ave(stan.bb$doy, stan.bb$phase, stan.bb$Genus, stan.bb$year)
stan.bb<-stan.bb[!duplicated(stan.bb),]
stan.bb$photo<-stan.bb$photo/3600
x<-paste(stan.bb$year, stan.bb$doy)
stan.bb$date<-as.Date(strptime(x, format="%Y %j"))
stan.bb$photo<-ifelse(stan.bb$year==2018, daylength(stan.bb$lat, stan.bb$date), stan.bb$photo)
### Clean observation error!
stan.bb$doy<-ifelse(stan.bb$Species=="alleghaniensis"&stan.bb$year==2016&stan.bb$doy==59, NA, stan.bb$doy)
stan.bb<-stan.bb[!is.na(stan.bb$doy),]
## Now bring in climate data...
cc<-read.csv("input/weldhill.csv", header=TRUE)
cc<-cc%>%
rename(date.time=Eastern.daylight.time)
cc$date<-gsub("\\s* .*$", '', cc$date.time)
cc$date<- as.Date(cc$date, "%m/%d/%y")
cc$year<-substr(cc$date, 0, 4)
cc$doy<-yday(cc$date)
cc$hour<-gsub("^.* \\s*|\\s*:.*$", '', cc$date.time)
cc<-dplyr::select(cc, Solar.Rad.W.m.2, Wind.Speed.mph, Wind.Dir, Temp..F, Dewpt..F, Temp.Soil..F,
Rain.in, Pressure.inHg, date, year, doy, hour)
cc$tmin<-ave(cc$Temp..F, cc$date, FUN=min)
cc$tmin<-fahrenheit.to.celsius(cc$tmin)
cc$tmax<-ave(cc$Temp..F, cc$date, FUN=max)
cc$tmax<-fahrenheit.to.celsius(cc$tmax)
cc$tmean<-ave(cc$Temp..F, cc$date)
cc$tmean<-fahrenheit.to.celsius(cc$tmean)
cc$tchill<-ave(cc$Temp..F, cc$date, cc$hour)
cc$tchill<-fahrenheit.to.celsius(cc$tchill)
cc$tmin.soil<-ave(cc$Temp.Soil..F, cc$date, FUN=min)
cc$tmin.soil<-fahrenheit.to.celsius(cc$tmin.soil)
cc$tmax.soil<-ave(cc$Temp.Soil..F, cc$date, FUN=max)
cc$tmax.soil<-fahrenheit.to.celsius(cc$tmax.soil)
cc$tmean.soil<-ave(cc$Temp.Soil..F, cc$date)
cc$tmean.soil<-fahrenheit.to.celsius(cc$tmean.soil)
cc$dewpt<-fahrenheit.to.celsius(ave(cc$Dewpt..F, cc$date))
cc$Rain.in<-ave(cc$Rain.in, cc$date, FUN=sum)
cc$precip<-conv_unit(cc$Rain.in, "inch", "mm")
cc$solr<-ave(cc$Solar.Rad.W.m.2, cc$date)
cc$windsp<-ave(cc$Wind.Speed.mph, cc$date)
sm.cc<-dplyr::select(cc, -Temp..F, -Temp.Soil..F, -Dewpt..F, -Rain.in, -Wind.Dir, -Solar.Rad.W.m.2, -Wind.Speed.mph, -Pressure.inHg)
sm.cc<-sm.cc[!duplicated(sm.cc),]
cc<-arrange(sm.cc, doy, year)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(randomForest)
library(geosphere)
install.packages("randomForest")
library(randomForest)
install.packages("randomForest")
